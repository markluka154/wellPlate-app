name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

env:
  NODE_VERSION: '20'
  PYTHON_VERSION: '3.11'

jobs:
  # Web App Tests
  web-tests:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./apps/web

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run type check
        run: pnpm typecheck

      - name: Run linting
        run: pnpm lint

      - name: Run unit tests
        run: pnpm test

      - name: Build application
        run: pnpm build
        env:
          # Mock environment variables for build
          NEXTAUTH_SECRET: 'test-secret'
          NEXTAUTH_URL: 'http://localhost:4321'
          DATABASE_URL: 'postgresql://test:test@localhost:5432/test'
          SUPABASE_URL: 'https://test.supabase.co'
          SUPABASE_ANON_KEY: 'test-key'
          SUPABASE_SERVICE_ROLE_KEY: 'test-key'
          STRIPE_SECRET_KEY: 'sk_test_test'
          STRIPE_PRICE_PRO_MONTHLY_EUR: 'price_test'
          STRIPE_PRICE_PRO_ANNUAL_EUR: 'price_test'
          STRIPE_WEBHOOK_SECRET: 'whsec_test'
          RESEND_API_KEY: 're_test'
          WORKER_URL: 'http://localhost:8420'

  # Worker Service Tests
  worker-tests:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./apps/worker

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: latest
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root

      - name: Install project
        run: poetry install --no-interaction

      - name: Run type check
        run: poetry run mypy worker/ --ignore-missing-imports

      - name: Run linting
        run: poetry run flake8 worker/

      - name: Run tests
        run: poetry run pytest tests/ -v
        env:
          OPENAI_API_KEY: 'sk-test-key'

  # E2E Tests
  e2e-tests:
    runs-on: ubuntu-latest
    needs: [web-tests, worker-tests]
    defaults:
      run:
        working-directory: ./apps/web

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Install Playwright browsers
        run: pnpm exec playwright install --with-deps

      - name: Build application
        run: pnpm build
        env:
          NEXTAUTH_SECRET: 'test-secret'
          NEXTAUTH_URL: 'http://localhost:4321'
          DATABASE_URL: 'postgresql://test:test@localhost:5432/test'
          SUPABASE_URL: 'https://test.supabase.co'
          SUPABASE_ANON_KEY: 'test-key'
          SUPABASE_SERVICE_ROLE_KEY: 'test-key'
          STRIPE_SECRET_KEY: 'sk_test_test'
          STRIPE_PRICE_PRO_MONTHLY_EUR: 'price_test'
          STRIPE_PRICE_PRO_ANNUAL_EUR: 'price_test'
          STRIPE_WEBHOOK_SECRET: 'whsec_test'
          RESEND_API_KEY: 're_test'
          WORKER_URL: 'http://localhost:8420'

      - name: Start application
        run: |
          pnpm start &
          sleep 10
        env:
          NEXTAUTH_SECRET: 'test-secret'
          NEXTAUTH_URL: 'http://localhost:4321'
          DATABASE_URL: 'postgresql://test:test@localhost:5432/test'
          SUPABASE_URL: 'https://test.supabase.co'
          SUPABASE_ANON_KEY: 'test-key'
          SUPABASE_SERVICE_ROLE_KEY: 'test-key'
          STRIPE_SECRET_KEY: 'sk_test_test'
          STRIPE_PRICE_PRO_MONTHLY_EUR: 'price_test'
          STRIPE_PRICE_PRO_ANNUAL_EUR: 'price_test'
          STRIPE_WEBHOOK_SECRET: 'whsec_test'
          RESEND_API_KEY: 're_test'
          WORKER_URL: 'http://localhost:8420'

      - name: Run E2E tests
        run: pnpm test:e2e

      - name: Upload test results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: playwright-report
          path: apps/web/playwright-report/
          retention-days: 30

  # Security Scan
  security-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'
